Minio ♥ Go
A Cloud Native Object Storage

Harshavardhana
@y4m4

* What is Minio? ☕
- Minio is an object storage server released under Apache License v2.0.
- Compatible with Amazon S3 cloud storage service.
- Best suited for storing photos, videos, backups and container / VM images.
- Size of an object can range from a few KBs to a maximum of 5TB.
- Is light enough to be bundled with the application stack, similar to NodeJS, Redis.

* Install

- Binary

   $ wget https://dl.minio.io/server/minio/release/linux-amd64/minio
   $ chmod +x minio
   $ ./minio version
   Version: 2017-01-25T03:14:52Z
   Release-Tag: RELEASE.2017-01-25T03-14-52Z
   Commit-ID: f8e4700a11065967242b8857045ce7dee607722d

- Docker

   $ docker run --name minio -p 9000:9000 minio/minio server /export

Visit [[http://docs.minio.io/docs/minio-docker-quickstart-guide][Docker quickstart guide]] for more details.

* Run
- Standalone FS (Filesystem)
       $ ./minio server /dir1
- Standalone Erasure
       $ minio server /dir1 /dir2 /dir3 ... /dir8
- Distributed Erasure
       $ minio server http://192.168.1.11/dir1 http://192.168.1.12/dir2 http://192.168.1.13/dir3 \
                        http://192.168.1.14/dir4 http://192.168.1.15/dir5 \
                        http://192.168.1.16/dir6 http://192.168.1.17/dir7 \
                        http://192.168.1.18/dir8
- **Distributed* **FS* **(Filesystem)*
       $ ./minio server --address ":9001" /mnt/gfs1
       $ ./minio server --address ":9002" /mnt/gfs1

* Deployment Architecture
.image distributed.png 520 _

* Distributed How ?

* Dsync (Distributed Syncing)
- No master node concept.
- Resilient applies quorum techniques.
- Drop-in replacement for **sync.RWMutex* / **sync.Locker*.
- Automatically reconnect to (restarted) nodes.
- Limited scalability and fixed configuration: up to 16 nodes.
- Will not (re)acquire any stale locks.
- Upto **7500* lks/s for maximum size of 16 nodes (consuming 10% CPU usage per server) on a moderately powerful server hardware.
- Lock requests (successful) should not take longer than **1ms* (provided decent network connection of 1 Gbit or more between the nodes).

* Example Write Lock

.code lock.go

Visit [[https://github.com/minio/dsync]] for more examples.

* Data Distribution (Erasure Code)

.code erasure.go

* Data Protection ?

* Bitrot (blake2b hash)
- SIMD accelerated pure Go implementation using Go Assembly.
- Three flavors: AVX2, AVX and SSE
- Speed up over pure go (non-assembly): 3.94x
- Performance comparison with other checksum techniques on AVX2.

  $ go test -bench=ComparisonAVX2
  BenchmarkComparisonMD5-12           1000           1726121 ns/op         607.48 MB/s
  BenchmarkComparisonSHA1-12           500           2005164 ns/op         522.94 MB/s
  BenchmarkComparisonSHA256-12         300           5531036 ns/op         189.58 MB/s
  BenchmarkComparisonSHA512-12         500           3423030 ns/op         306.33 MB/s
  BenchmarkComparisonBlake2B-12       1000           1232690 ns/op         850.64 MB/s

To know more visit [[https://fosdem.org/2017/schedule/event/go_scaling/]] talk by Frank Wessels.

* Bitrot (sha256 hash) on ARM64
- Used in AWS S3 payload signature verification and bitrot on GOARCH:ARM64
- Speed up over pure go on ARM64: 105x

  | Processor                         | Package                      |       Speed | Improvement |
  | --------------------------------- | ---------------------------- | -----------:| -----------:|
  | 1.2 GHz ARM Cortex-A53            | minio/sha256-simd (ARM64)    |  638.2 MB/s |        105x |
  | 2.4 GHz Intel Xeon CPU E5-2620 v3 | minio/sha256-simd (AVX2) (*) |  355.0 MB/s |       1.88x |
  | 2.4 GHz Intel Xeon CPU E5-2620 v3 | minio/sha256-simd (AVX)      |  306.0 MB/s |       1.62x |
  | 2.4 GHz Intel Xeon CPU E5-2620 v3 | minio/sha256-simd (SSE)      |  298.7 MB/s |       1.58x |
  | 2.4 GHz Intel Xeon CPU E5-2620 v3 | crypto/sha256                |  189.2 MB/s |             |
  | 1.2 GHz ARM Cortex-A53            | crypto/sha256                |    6.1 MB/s |             |

As measured on Intel Xeon (same as above) with AVX2 version:

   | Method  | Package            |    Speed |
   | ------- | -------------------| --------:|
   | BLAKE2B | minio/blake2b-simd | 851 MB/s |
   | MD5     | crypto/md5         | 607 MB/s |
   | SHA1    | crypto/sha1        | 522 MB/s |
   | SHA256  | minio/sha256-simd  | 355 MB/s |
   | SHA512  | crypto/sha512      | 306 MB/s |

* On Disk Format (XL)
- Describes each object uniquely for Erasure Code and Bitrot.
- Human readable and parser friendly.
- Replicated across all disks.
.code xl.json

* Client Tool and Libraries

* Minio Client (mc)
- A cross platform modern alternative to UNIX commands like `ls`, `cp`, `diff` etc.
- Supports filesystems and Amazon S3 compatible object storage.

Install

        $ go get -u github.com/minio/mc

        $ mc ls play
        [2017-02-12 22:35:16 PST]     0B ferenginar/
        [2017-02-12 15:08:45 PST]     0B andoria/
        [2017-02-12 23:24:21 PST]     0B romulus/

Everyday use

        alias ls='mc ls'
        alias cp='mc cp'
        alias cat='mc cat'
        alias mkdir='mc mb'
        alias pipe='mc pipe'

* Minio Client Library - Upload a local file.

.code putobject.go

* Questions?
- Community Channel [[https://slack.minio.io][slack.minio.io]]
- Documentation [[https://docs.minio.io][docs.minio.io]]

